

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.Timer;


/**
 *
 * @author skryu
 */
public class Boat_play extends javax.swing.JFrame {
    
    static int speed;
    static int direction = 3;
    KeySubject road = new KeySubject();
    pbTread pb1; 
      

    /**
     * Creates new form Boat_play
     */
    public Boat_play() {
        
        initComponents();
        //initialisation fuel
        start_play();
               
        //initial start speed of the boat
        speed = 30;
        jSlider_Spead.setValue(speed);
        //jLabel_Speed.setText("Speed is: " + jSlider_Spead.getValue());
        
        
        //size for JFrame
        setSize(1000, 850);
        setLocationRelativeTo(null);
        setResizable(false);
         
        //size for play area
        
        jPanel_PlayArea.setSize(800, 500);
        jPanel_PlayArea.setLocation(20, 40);
        jPanel_PlayArea.setBorder(BorderFactory.createMatteBorder(0, 0, 20, 20, Color.green)); //border
        jPanel_PlayArea.setLayout(new GridLayout(4,3,0,0));
        add(jPanel_PlayArea);
        jPanel_PlayArea.add(jLabel_Boat);
        
    
    }
    
    
    public void start_play(){
        pb1 = new pbTread(progress);
        pb1.start();
       
    }
    
    //function for stopped the boat
    
    public void stop_boat(){
        
                direction = 5;
                int x = jLabel_Boat.getLocation().x;
                int y = jLabel_Boat.getLocation().y;
                System.out.println("X: " + x + " Y: " +y);
                jLabel_Boat.setLocation(x, y);
    }
    
    // class for progress bar. Used for fuel
    
    class pbTread extends Thread{
        JProgressBar pbar;
        pbTread(JProgressBar pbar){
           pbar =  progress;
        }
        
        public void run(){
            int min = 0;
            int max = 200;
            
            progress.setMaximum(min);
            progress.setMaximum(max);
            progress.setValue(0);
                        
            for(int i=max; i>min; i--){
                 if (i == min+30){
                   JOptionPane.showMessageDialog(null, "Fuel is almost out! Please refill your tank or return to thr creen coastline");  
                 }
            
            progress.setValue(i);
            
            
                try {
                  //
                   if(speed<20){
                      sleep(500);   //increased fuel consumption 
                   }else{
                      sleep(2000); //reduced fuel consumption
                   } 
                   
                
                } catch (InterruptedException ex) {
                    java.util.logging.Logger.getLogger(Boat_play.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            
        }
            stop_boat(); // boat stop if tank is empty 
            
            
            //disabling the ability to control the boat if tank is empty 
            
            jButton_left.setEnabled(false);
            jButton_Stop.setEnabled(false);
            jButton_Up.setEnabled(false);
            jButton_Down.setEnabled(false);
            jButton_rigth.setEnabled(false);
            
            JOptionPane.showMessageDialog(null, "Tank is empty","Error", JOptionPane.ERROR_MESSAGE);
                                    
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel_PlayArea = new javax.swing.JPanel();
        jLabel_Boat = new javax.swing.JLabel();
        jButton_left = new javax.swing.JButton();
        jButton_rigth = new javax.swing.JButton();
        jButton_Up = new javax.swing.JButton();
        jButton_Down = new javax.swing.JButton();
        jButton_Stop = new javax.swing.JButton();
        jSlider_Spead = new javax.swing.JSlider();
        jLabel_Speed = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        jButton_RefillingFuel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-gas-pump-80.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game Boat");
        setPreferredSize(new java.awt.Dimension(1000, 850));

        jPanel_PlayArea.setBackground(new java.awt.Color(102, 204, 255));
        jPanel_PlayArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 255, 102), null, null));

        javax.swing.GroupLayout jPanel_PlayAreaLayout = new javax.swing.GroupLayout(jPanel_PlayArea);
        jPanel_PlayArea.setLayout(jPanel_PlayAreaLayout);
        jPanel_PlayAreaLayout.setHorizontalGroup(
            jPanel_PlayAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );
        jPanel_PlayAreaLayout.setVerticalGroup(
            jPanel_PlayAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );

        jLabel_Boat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boat80.png"))); // NOI18N

        jButton_left.setIcon(new javax.swing.ImageIcon(getClass().getResource("/left48.png"))); // NOI18N
        jButton_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_leftActionPerformed(evt);
            }
        });

        jButton_rigth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/right48.png"))); // NOI18N
        jButton_rigth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_rigthActionPerformed(evt);
            }
        });

        jButton_Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up48.png"))); // NOI18N
        jButton_Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpActionPerformed(evt);
            }
        });

        jButton_Down.setIcon(new javax.swing.ImageIcon(getClass().getResource("/down48.png"))); // NOI18N
        jButton_Down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DownActionPerformed(evt);
            }
        });

        jButton_Stop.setText("Stop");
        jButton_Stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_StopActionPerformed(evt);
            }
        });

        jSlider_Spead.setMaximum(40);
        jSlider_Spead.setMinimum(10);
        jSlider_Spead.setMinorTickSpacing(5);
        jSlider_Spead.setPaintLabels(true);
        jSlider_Spead.setPaintTicks(true);
        jSlider_Spead.setToolTipText("");
        jSlider_Spead.setValue(0);
        jSlider_Spead.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jSlider_Spead.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_SpeadStateChanged(evt);
            }
        });

        jLabel3.setText("Higher speed");

        jLabel4.setText("Slow Speed");

        jLabel5.setText("empty");

        jButton_RefillingFuel.setText("Refilling fuel");
        jButton_RefillingFuel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RefillingFuelActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-fuel-pump-48.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-fuel-pump-48.png"))); // NOI18N

        jLabel7.setText("Control panel");

        jLabel8.setText("full");

        jLabel9.setText("Fuel Scale ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_Boat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jPanel_PlayArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(133, 133, 133))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addComponent(jLabel3))
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel_Speed, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSlider_Spead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(132, 132, 132)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton_Up, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton_left, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_rigth, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton_Down, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jButton_RefillingFuel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jPanel_PlayArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel_Boat))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider_Spead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton_left)
                                .addComponent(jButton_rigth))
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel_Speed, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_Down)
                            .addComponent(jButton_Up)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_RefillingFuel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_leftActionPerformed
                 
            direction = 4;
            //Go left = new Go(road); 
            speed = jSlider_Spead.getValue();
            
            new Timer(speed , new ActionListener() {
                    int x = jLabel_Boat.getLocation().x;
                    int y = jLabel_Boat.getLocation().y;
                    
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (x > 10 && direction == 4) {
                            x--;
                            jLabel_Boat.setLocation(x, y);
                            System.out.println("X: " + x + " Y: " +y);
                                                                              
                        } else {
                            ((Timer)e.getSource()).stop();
                        }
                    }
                }).start();
        
           
    }//GEN-LAST:event_jButton_leftActionPerformed

    private void jButton_rigthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_rigthActionPerformed
                
                direction = 3;
                speed = jSlider_Spead.getValue();
                Go right = new Go(road);
                
                new Timer(speed , new ActionListener() {
                    int x = jLabel_Boat.getLocation().x;
                    int y = jLabel_Boat.getLocation().y;
                    
                    Dimension myDisplay = Toolkit.getDefaultToolkit().getScreenSize();
                    
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        int maxX = myDisplay.width - jLabel_Boat.getWidth() - 450;  //limiting the movement of the ship outside the playing field 
                        if (x < maxX && direction == 3) {
                            x++;
                            jLabel_Boat.setLocation(x, y);
                            System.out.println("X: " + x + " Y: " +y);
                            
                            if (x==maxX){ //refueling the boat if it is on the shore
                                pb1.stop();
                                start_play();
                                JOptionPane.showMessageDialog(null, "The boat was refueled!");
                            }
                            
                            
                        } else {
                            ((Timer)e.getSource()).stop();
                        }
                    }
                   
                }).start();
               
    }//GEN-LAST:event_jButton_rigthActionPerformed

    private void jButton_UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpActionPerformed
        // TODO add your handling code here:
                
         direction = 1;
         speed = jSlider_Spead.getValue();
         Go up = new Go(road);
        
                new Timer(speed , new ActionListener() {
                    int x = jLabel_Boat.getLocation().x;
                    int y = jLabel_Boat.getLocation().y;

                    @Override
                    public void actionPerformed(ActionEvent e) {
                            if (y > 0 && direction == 1) 
                            {
                            y--;
                            jLabel_Boat.setLocation(x, y);
                            System.out.println("X: " + x + " Y: " +y);
                            
                            } else {
                                ((Timer)e.getSource()).stop();
                            }
                        }
                    }).start();
    }//GEN-LAST:event_jButton_UpActionPerformed

    private void jButton_DownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DownActionPerformed
        // TODO add your handling code here:
        
            direction = 2;
            speed = jSlider_Spead.getValue();
        
            Go down = new Go(road);
            
            new Timer(speed , new ActionListener() {
                    
                    int x = jLabel_Boat.getLocation().x;
                    int y = jLabel_Boat.getLocation().y;
                    
                    Dimension myDisplay = Toolkit.getDefaultToolkit().getScreenSize();

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        int maxY = myDisplay.height - jLabel_Boat.getHeight() - 550;   //limiting the movement of the ship outside the playing field 
                        
                        if (y < maxY && direction == 2) {
                            y++;
                            jLabel_Boat.setLocation(x, y);
                            System.out.println("X: " + x + " Y: " +y);
                            
                            if (y == maxY){   //refueling the boat if it is on the shore
                                pb1.stop();
                                start_play();
                                JOptionPane.showMessageDialog(null, "The boat was refueled!");
                            }
                            
                        } else {
                            ((Timer)e.getSource()).stop();
                        }
                    }
            }).start();
    }//GEN-LAST:event_jButton_DownActionPerformed

    private void jButton_StopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_StopActionPerformed
        // TODO add your handling code here:
        stop_boat();
    }//GEN-LAST:event_jButton_StopActionPerformed

    private void jSlider_SpeadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_SpeadStateChanged
        // TODO add your handling code here:
              
                speed = jSlider_Spead.getValue();
               // jLabel_Speed.setText("Speed is: " + jSlider_Spead.getValue());
                
                if(speed == 15){
                   JOptionPane.showMessageDialog(null, "Your boat may capasize. Please change speed!"); 
                }
                    
    }//GEN-LAST:event_jSlider_SpeadStateChanged

    private void jButton_RefillingFuelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RefillingFuelActionPerformed
//         TODO add your handling code here:
       
//the ability to control the boat after refueling
        jButton_left.setEnabled(true);
        jButton_Stop.setEnabled(true);
        jButton_Up.setEnabled(true);
        jButton_Down.setEnabled(true);
        jButton_rigth.setEnabled(true);
        pb1.stop();
        start_play();
        
    }//GEN-LAST:event_jButton_RefillingFuelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Boat_play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Boat_play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Boat_play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Boat_play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Boat_play().setVisible(true);
            }
        });
    }
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Down;
    private javax.swing.JButton jButton_RefillingFuel;
    private javax.swing.JButton jButton_Stop;
    private javax.swing.JButton jButton_Up;
    private javax.swing.JButton jButton_left;
    private javax.swing.JButton jButton_rigth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Boat;
    private javax.swing.JLabel jLabel_Speed;
    private javax.swing.JPanel jPanel_PlayArea;
    private javax.swing.JSlider jSlider_Spead;
    private javax.swing.JProgressBar progress;
    // End of variables declaration//GEN-END:variables
}
